[metadata]
name = piipaa
version = 2022.5.1
description = Python Installs Python anywhere.
url = https://github.com/sthagen/piipaa
author = Stefan Hagen
author_email = "Stefan Hagen" <stefan@hagen.link>
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
license_files = LICENSE
classifiers =
    License :: OSI Approved :: MIT License

[options]
python_requires = >=3.8
package_dir =
    =src
packages = find:
include_package_data = True

[options.packages.find]
where = src
exclude =
    test*
    src/piipaa/__pycache__*

[options.entry_points]
console_scripts =
    piipaa = piipaa.cli:main

[bdist_wheel]
universal = True

[tool:pytest]
testpaths = test
filterwarnings = error

[tox:tox]
isolated_build = True
envlist = py310,py39,py38

[testimports]
deps =
    pytest

[testenv]
deps =
    {[testimports]deps}
commands =
    python -m pytest {posargs}

[testenv:py310]
deps =
    {[testimports]deps}
    pytest-cov
commands =
    python -m pytest {posargs}
    python -m coverage html

[testenv:format]
skip_install = True
deps =
    black
    isort
commands =
    python -m black {posargs:--check --diff src test}
    python -m isort {posargs:--check-only --df src test}

[testenv:lint]
skip_install = True
deps =
    flake8
commands =
    python -m flake8 {posargs:src test}

[testenv:typecheck]
deps =
    mypy
commands =
    python -m mypy {posargs:src}

[coverage:run]
branch = True
omit =
    */_version.py

[coverage:paths]
source =
    src/piipaa/
    */site-packages/piipaa/

[coverage:report]
show_missing = True
skip_covered = True
precision = 2
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    if TYPE_CHECKING:
    @overload
omit =
    # __main__.py is trivial and hard to test properly
    */__main__.py

[isort]
line_length=120
known_first_party=piipaa
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
combine_as_imports=True

[mypy]
strict = True

[flake8]
max-line-length = 120
max-complexity = 15
ignore = E203, W503
inline-quotes = '
multiline-quotes = """
